on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: pre-commit

jobs:
  pre-commit:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: r-lib/actions/setup-r@v1
      
      - uses: actions/checkout@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran('yaml')
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .
      
      - name: Update Hook revision to current push
        run: |
          # config <- yaml::read_yaml('.pre-commit-config.yaml')
          # ours <- which(purrr::map_chr(config$repos, 'repo') == "https://github.com/lorenzwalthert/precommit")
          # config$repos[[ours]]$rev <- Sys.getenv("GITHUB_SHA")
          # yaml::write_yaml(config, '.pre-commit-config.yaml')
          # https://stackoverflow.com/questions/30871868/sed-replace-first-occurence-in-place-with-big-files
          sed -i ''  -e "1,/rev:.*/{s/rev:.*/rev: $GITHUB_SHA/;}" .pre-commit-config.yaml
          
      - name: Run pre-commit
        run: | 
          brew install pre-commit
          pre-commit install
          pre-commit run --files R/config.R 
          pre-commit run --files DESCRIPTION 
          echo 'one' >> README.Rmd
          echo 'one' >> README.md
          git add README*
          pre-commit run --files README.Rmd
        env:
          SKIP: consistent-release-tag

#!/usr/bin/env Rscript

# This hook checks that all versions in config files and the git tag that
# is used by precommit to clone the repo is identical.
path_config <- c(
  fs::path("inst", "pre-commit-config.yaml"),
  fs::path(".pre-commit-config.yaml")
)



assert_config_has_rev <- function(path_config, latest_tag) {
  file <- yaml::read_yaml(path_config) 
  repo <- purrr::map(file$repos, "repo") 
  
  lorenzwalthert_precommit_idx <- which(repo == "https://github.com/lorenzwalthert/precommit")
  stopifnot(length(lorenzwalthert_precommit_idx) == 1)
  rev <- file$repos[[lorenzwalthert_precommit_idx]]$rev
  
  if (latest_tag != rev) {
    rlang::abort(glue::glue(
      "latest git tag is `{latest_tag}`, but in `{path_config}`, you the  ", 
      "revision is set to `{rev}` Please make the two correspond."
    ))
  }
}

get_latest_tag <- function() {
  tags <- names(git2r::tags("."))
  paste0("v", max(as.numeric_version(gsub("^v", "", tags))))
}

latest_tag <- get_latest_tag()

purrr::walk(path_config, assert_config_has_rev, latest_tag = latest_tag)

if (!(gsub("^v", "", latest_tag) < desc::desc_get_field('Version'))) {
  rlang::abort(paste(
    "DESCRIPTION version must be larger than git tag. Only exception:",
    "Revision is a release. Then, git tag and DESCRIPTION version should", 
    "match. In this case, ignore the warning and commit with --no-verify."
    
  ))
}
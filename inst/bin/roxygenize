#!/usr/bin/env Rscript

"Run roxygenize()
Usage:
  roxygenize <files>...
" -> doc
arguments <- docopt::docopt(doc)
# We care about all files. We simply re-run the hook if any R or man file 
# timestamp has changed since the last run, because we can't easily map R to Rd
# files. The preliminary use case
# for this is when we previously attempted to commit but check failed, so on 
# the second try without any other files changed, it will succeed. 
# This
# check should run *after* check that modify the files that are passed to them 
# (like styler) because they will never modify their input files.

library("R.cache")
path_relative_cache <- file.path("precommit", "roxygenize")
candidates <- c(list.files(c("R", "man"), full.names = TRUE), "DESCRIPTION")
wd <- list(getwd())
cache <- loadCache(key = wd, dirs = path_relative_cache)
if (!is.null(cache)) {
  all_files <- file.info(candidates)
  if (nrow(all_files) >= 1L) {
    last_modified <- all_files[order(all_files$mtime, decreasing = TRUE)[1], ]
    if (last_modified$mtime > cache[[1]]) {
      roxygen2::roxygenise()
      saveCache(object = Sys.time(), key = wd, dirs = path_relative_cache)
    }
  }
} else {
  roxygen2::roxygenise()
  saveCache(object = Sys.time(), key = wd, dirs = path_relative_cache)
}